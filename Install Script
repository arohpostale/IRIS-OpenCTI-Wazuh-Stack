#!/bin/bash

# Update system packages
sudo apt update && sudo apt upgrade -y

# Install necessary packages for adding Docker repository
sudo apt install -y ca-certificates curl gnupg lsb-release

# Add Dockerâ€™s official GPG key
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

# Set up the stable repository
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

# Install Docker
sudo apt update
sudo apt install -y docker-ce docker-ce-cli containerd.io

# Install Docker Compose
sudo curl -L "https://github.com/docker/compose/releases/download/v2.5.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

# Verify Docker and Docker Compose installation
docker --version
docker-compose --version

# Set up DFIR-IRIS
git clone https://github.com/dfir-iris/iris-web.git
cd iris-web

# Create Docker Compose file for DFIR-IRIS
cat <<EOF > docker-compose.yml
version: '3.8'
services:
  iris:
    image: dfir-iris/iris-web
    ports:
      - "5000:5000"
    environment:
      - IRIS_CONFIG=/config/iris.config
    volumes:
      - ./config:/config
EOF

# Start DFIR-IRIS container
docker-compose up -d
cd ..

# Set up Wazuh
git clone https://github.com/wazuh/wazuh-docker.git
cd wazuh-docker

# Create Docker Compose file for Wazuh
cat <<EOF > docker-compose.yml
version: '3.8'
services:
  wazuh:
    image: wazuh/wazuh
    ports:
      - "1514:1514"
      - "55000:55000"
    environment:
      - WAZUH_MANAGER=yes
    volumes:
      - wazuh_data:/var/ossec/data

volumes:
  wazuh_data:
EOF

# Start Wazuh container
docker-compose up -d
cd ..

# Set up OpenCTI
git clone https://github.com/OpenCTI-Platform/docker.git opencti-docker
cd opencti-docker

# Create Docker Compose file for OpenCTI
cat <<EOF > docker-compose.yml
version: '3.8'
services:
  opencti:
    image: opencti/platform:5.1.3
    ports:
      - "8080:8080"
    environment:
      - OPENCTI_ADMIN_EMAIL=admin@opencti.io
      - OPENCTI_ADMIN_PASSWORD=ChangeMe
      - OPENCTI_ADMIN_TOKEN=ChangeMe
      - OPENCTI_URL=http://localhost:8080

  redis:
    image: redis:6.0

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
    environment:
      - discovery.type=single-node

  minio:
    image: minio/minio
    environment:
      - MINIO_ROOT_USER=opencti
      - MINIO_ROOT_PASSWORD=ChangeMe
    command: server /data

  rabbitmq:
    image: rabbitmq:3.8-management
    environment:
      - RABBITMQ_DEFAULT_USER=opencti
      - RABBITMQ_DEFAULT_PASS=ChangeMe

  connector-history:
    image: opencti/connector-history:5.1.3
    environment:
      - CONNECTOR_ID=ChangeMe
      - CONNECTOR_TYPE=HISTORY
      - CONNECTOR_NAME=History
      - CONNECTOR_SCOPE=history
      - CONNECTOR_CONFIDENCE_LEVEL=50
      - CONNECTOR_LOG_LEVEL=info
      - OPENCTI_URL=http://opencti:8080
      - OPENCTI_TOKEN=ChangeMe

volumes:
  elasticsearch_data:
  minio_data:
  rabbitmq_data:
EOF

# Start OpenCTI container
docker-compose up -d
cd ..

# Output success message
echo "DFIR-IRIS, Wazuh, and OpenCTI have been successfully set up using Docker!"
